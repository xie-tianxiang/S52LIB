cmake_minimum_required(VERSION 3.10)
cmake_policy(SET CMP0043 NEW)
cmake_policy(SET CMP0025 NEW)
if (POLICY CMP0057)
  cmake_policy(SET CMP0057 NEW)
endif ()
if (POLICY CMP0077)
  cmake_policy(SET CMP0077 NEW)
endif ()

set(PACKAGE_NAME opencpn)

message(STATUS "cmake version: ${CMAKE_VERSION}")

project(ToDo)  # 项目名称

# Locations where cmake looks for cmake modules.
set(
  CMAKE_MODULE_PATH
  ${CMAKE_SOURCE_DIR}/build
  ${CMAKE_SOURCE_DIR}/
  ${CMAKE_SOURCE_DIR}/cmake
)

if (NOT wxWidgets_INCLUDE_DIRS)
    include(SimpleWxConfig)
    SimpleWxConfig()
endif ()

# 全局启用位置无关代码（动态库必选，静态库也建议启用，方便复用）
set(CMAKE_POSITION_INDEPENDENT_CODE ON)

set(s57data
    data/s57data/attdecode.csv
    data/s57data/S52RAZDS.RLE
    data/s57data/s57attributes.csv
    data/s57data/s57expectedinput.csv
    data/s57data/s57objectclasses.csv
    data/s57data/rastersymbols-dark.png
    data/s57data/rastersymbols-day.png
    data/s57data/rastersymbols-dusk.png
    data/s57data/chartsymbols.xml
)

# ========== 1. 编译 lib 下的子库 ==========


add_subdirectory(libs/gdal)
add_subdirectory(libs/gl_headers)
add_subdirectory(libs/geoprim)
add_subdirectory(libs/iso8211)
add_subdirectory(libs/pugixml)
add_subdirectory(libs/libtess2)
add_subdirectory(libs/s57-charts)
add_subdirectory(libs/s52plib)


# ========== 2. 编译主程序（假设主代码在 src 目录） ==========
# 假设主程序代码在 src 目录下，且有 test.cpp 作为入口文件
# 查找src目录下的所有源文件
aux_source_directory(src SRCS)

# 生成可执行文件，这里假设 test.cpp 是主入口，可根据实际情况调整
add_executable(test_executable ${SRCS})

# target_include_directories(test_executable PRIVATE ${wxWidgets_INCLUDE_DIRS})
# target_link_libraries(test_executable PRIVATE ${wxWidgets_LIBRARIES})

target_link_libraries(test_executable PRIVATE ocpn::s52plib)